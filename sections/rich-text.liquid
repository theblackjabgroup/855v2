{{ 'section-rich-text.css' | asset_url | stylesheet_tag }}

<style>

  
.color-{{ section.settings.color_scheme }} .dot,
.color-{{ section.settings.color_scheme }} .dot-l {
background-color: currentColor;
}
{{ section.settings.font_title | font_face: font_display: 'swap' }}
{{ section.settings.font_richtext | font_face: font_display: 'swap' }}
{{ section.settings.font_richtextsubheading | font_face: font_display: 'swap' }}

  
  .layout1 p{
    font-family:  {{ section.settings.font_richtextsubheading.family | default: "Inter" }}, {{ section.settings.font_richtextsubheading.fallback_families }};
    font-weight: {{ section.settings.font_richtextsubheading.weight }};
    font-style: {{ section.settings.font_richtextsubheading.style }};
  }

  .layout1 h2 {
    font-size: {{ section.settings.heading_font_size }}px;
  }
  .layout1 .rich-text__text {
   font-size: {{ section.settings.text_font_size }}px;
  }
.layout2 {
   background-color: {{ section.settings.background_color }};
}
.layout2 h2 {
    font-size: {{ section.settings.heading_font_size }}px;
  }

.layout2 .rich-text__text {
     font-size: {{ section.settings.text_font_size }}px;
  }
  @media screen and (max-width: 749px) {
    .layout1 h2,
    .layout2 h2 {
      font-size: {{ section.settings.heading_font_size | times: 0.8 | round: 0 }}px;
    }
    .layout1 .rich-text__text,
    .layout2 .rich-text__text {
      font-size: {{ section.settings.text_font_size | times: 0.9 | round: 0 }}px;
    }
  }
</style>

<div class="rich-text-section color-{{ section.settings.color_scheme }} gradient section-{{ section.id }}-padding">
  {% if section.settings.layout_style == 'layout1' %} 
    <div class="layout1 page-width">
      <h2 class="richtext_heading">{{ section.settings.heading | default: "Transforming Healthcare with Innovative Solutions" }}</h2>
      <div class="decorative-dots">
        {% for i in (1..10) %}
          <span class="dot"></span>
        {% endfor %}
      </div>
       <p class="richtext_subheading">{{ section.settings.caption | default: "Delivering Excellence in Medical Products" }}</p>
      <div class="rich-text__text rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
        {{ section.settings.text }}
      </div>
    </div>
  {% else %}
    <div class="layout2">
    <div class="dots-container">
        <div class="side-dots left">
          {% for i in (1..10) %}
            <span class="dot-l"></span>
          {% endfor %}
        </div>
        <div class="rich-text__blocks {{ section.settings.content_alignment }}">
          <h2 class="richtext_heading">{{ section.settings.heading | default: "Transforming Healthcare with Innovative Solutions" }}</h2>
           <p class="richtext_subheading" >{{ section.settings.caption | default: "Delivering Excellence in Medical Products" }}</p>
         
          <div class="rich-text__text rte{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
            {{ section.settings.text }}
          </div>
        </div>
        <div class="side-dots right color-{{ section.settings.color_scheme }}">
          {% for i in (1..10) %}
            <span class="dot-l"></span>
          {% endfor %}
        </div>
      </div>
    </div>
  {% endif %}
</div>


<script>
document.addEventListener('DOMContentLoaded', function() {
  const dotsContainer = document.querySelector('.rich-text__text');
  const leftDots = document.querySelector('.side-dots.left');
  const rightDots = document.querySelector('.side-dots.right');
  

  const DOT_WIDTH = 8; 
  const DOT_MARGIN = 16; 
  const DOT_TOTAL_SPACE = DOT_WIDTH + DOT_MARGIN; 
  
  function updateDots() {
    if (!dotsContainer || !leftDots || !rightDots) return;
    
    const screenWidth = window.innerWidth;
    
 
    if (screenWidth <= 749) { 
      const availableWidth = screenWidth * 0.8; 
      const numberOfDots = Math.floor(availableWidth / DOT_TOTAL_SPACE);
      
      [leftDots, rightDots].forEach(dotContainer => {
      
        dotContainer.innerHTML = '';
        
        
        for (let i = 0; i < numberOfDots; i++) {
          const dot = document.createElement('span');
          dot.className = 'dot-l';
          dotContainer.appendChild(dot);
        }
      });
    } else {
   
      const containerHeight = dotsContainer.offsetHeight;
      const paddingSpace = 15;
      const availableHeight = containerHeight - paddingSpace;
      const numberOfDots = Math.max(
        Math.floor(availableHeight / 15),
        12
      );
      
      [leftDots, rightDots].forEach(dotContainer => {
       
        dotContainer.innerHTML = '';
        
       
        for (let i = 0; i < numberOfDots; i++) {
          const dot = document.createElement('span');
          dot.className = 'dot-l';
          dotContainer.appendChild(dot);
        }
      });
    }
  }

  const resizeObserver = new ResizeObserver((entries) => {
    requestAnimationFrame(updateDots);
  });
  
  if (dotsContainer) {
    resizeObserver.observe(dotsContainer);
    updateDots(); // Initial update
  }
  
  window.addEventListener('resize', () => {
    requestAnimationFrame(updateDots);
  });
  
  // Cleanup
  window.addEventListener('unload', () => {
    if (resizeObserver) {
      resizeObserver.disconnect();
    }
  });
});
</script>

{% schema %}
{
  "name": "Rich Text",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Transforming Healthcare with Innovative Solutions"
    },
    {
      "type": "text",
      "id": "caption",
      "label": "Caption",
      "default": "Delivering Excellence in Medical Products"
    },
    {
      "type": "textarea",
      "id": "text",
      "label": "Text",
      "default": "At [Your Company Name], we are dedicated to enhancing patient care and clinical efficiency through state-of-the-art medical products. Our commitment to innovation and quality ensures that healthcare providers have the tools they need to deliver the best possible outcomes for their patients."
    },
    {
      "type": "select",
      "id": "layout_style",
      "label": "Choose Layout",
      "options": [
        {
          "value": "layout1",
          "label": "Layout 1"
        },
        {
          "value": "layout2",
          "label": "Layout 2"
        }
      ],
      "default": "layout1"
    },
     {
      "type": "range",
      "id": "dots_number",
      "min": 10,
      "max": 24,
      "step": 1,
      "label": "Number of dots",
      "default": 10
    },
     {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "range",
      "id": "heading_font_size",
      "min": 16,
      "max": 60,
      "step": 1,
      "unit": "px",
      "label": "Heading Font Size",
      "default": 22
    },
   
  
    {
      "type": "range",
      "id": "text_font_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Text Font Size",
      "default": 14
    },
   
    
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 40
    }
  ],
  "presets": [
    {
      "name": "Rich Text"
    }
  ]
}
{% endschema %}
