{{ 'collapsible-content.css' | asset_url | stylesheet_tag }}
<style>
 .faq-item::before,
.faq-item::after {
  background-color: rgb(var(--color-background)); /* Ensure this matches the background where the div sits */
}
.dot {
  background-color: rgb(var(--color-background));
}
  /* layout2  */
.striaght-line {
  background-color: rgb(var(--color-background));
}
</style>

<div class="faq-section color-{{ section.settings.color_scheme }} gradient">
  <div class='faq-main'>
    <!-- Left side -->
    <div class="faq-header">
      <h2 class="faq-title">{{ section.settings.caption }}</h2>
      <p class="support-text">{{ section.settings.description }}</p>
    </div>
  <!--right side -->
    <div class='faq-container '>
       {% for block in section.blocks %}
   
  <div class="faq-item color-{{ section.settings.color_scheme }}">
    <span class="faq-number color-{{ section.settings.cardColor }}">{{ block.settings.serialno }}</span>
          {% if section.settings.layout_style == 'layout1' %}
    <div class="dots-line">
      <!-- Dots will be added by JavaScript -->
    </div>
      {% else %}
            <div class="striaght-line color-{{ section.settings.color_scheme }}">
              </div>
    {% endif %}
            
  <div class="faq-content color-{{ section.settings.cardColor }}">
      <div class="faq-question">
        <div class="question-text">{{ block.settings.questiontext }}</div>
        <div class="faq-answer">{{ block.settings.solutionans }}</div>
      </div>
      <div>

        <svg class="icon-arrow" width="24" height="24" viewBox="0 0 24 24">
          <path d="M7 10l5 5 5-5" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
        </svg>
      </div>
         
    </div>
            
             </div>
               {% endfor %}
  </div>
             </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Function to create dots for layout1
  const createDots = (dotsLine) => {
    const containerHeight = dotsLine.offsetHeight;
    const dotHeight = 8;
    const dotMargin = 8;
    const dotSpacing = dotHeight + dotMargin;
    const numberOfDots = Math.floor(containerHeight / dotSpacing);
    
    dotsLine.innerHTML = '';
    for (let i = 0; i < numberOfDots; i++) {
      const dot = document.createElement('span');
      dot.className = 'dot';
      dotsLine.appendChild(dot);
    }
  };

  // Function to handle FAQ item click
  const handleFAQClick = (item) => {
    const answer = item.querySelector('.faq-answer');
    const arrow = item.querySelector('.icon-arrow');
    
    if (answer && arrow) {
      answer.classList.toggle('visible');
      arrow.classList.toggle('rotated');
      
      // Check if this is layout1 and update dots if needed
      const dotsLine = item.querySelector('.dots-line');
      if (dotsLine) {
        setTimeout(() => createDots(dotsLine), 200);
      }
    }
  };

  // Initialize all FAQ items
  document.querySelectorAll('.faq-item').forEach(item => {
    // Set up click handler for only the arrow icon
    const arrow = item.querySelector('.icon-arrow');
    if (arrow) {
      arrow.addEventListener('click', (e) => {
        e.stopPropagation(); // Prevent event bubbling
        handleFAQClick(item);
      });
    }

    // Initialize dots for layout1 if applicable
    const dotsLine = item.querySelector('.dots-line');
    if (dotsLine) {
      createDots(dotsLine);
    }
  });

  // Handle window resize for layout1
  let resizeTimer;
  window.addEventListener('resize', () => {
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(() => {
      document.querySelectorAll('.dots-line').forEach(createDots);
    }, 250);
  });
});
</script>

{% schema %}
{
  "name": "t:sections.collapsible_content.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "caption",
      "label": "t:sections.collapsible_content.settings.caption.label"
    },
    {
      "type": "text",
      "id": "description",
      "label": "t:sections.collapsible_content.settings.caption.label"
    },
     {
      "type": "select",
      "id": "layout_style",
      "label": "Choose Layout",
      "options": [
        {
          "value": "layout1",
          "label": "Layout 1"
        },
        {
          "value": "layout2",
          "label": "Layout 2"
        }
      ],
      "default": "layout1"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
     {
      "type": "color_scheme",
      "id": "cardColor",
      "label": "Card Color"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
  
    {
      "type": "collapsible_row",
      "name": "t:sections.collapsible_content.blocks.collapsible_row.name",
      "settings": [
           {
      "type": "text",
      "id": "serialno",
      "default": "01",
      "label": "t:sections.collapsible_content.settings.caption.label"
    },
        {
          "type": "text",
          "id": "questiontext",
          "default": "What is number of wheels in wheel chair",
          "label": "t:sections.collapsible_content.blocks.collapsible_row.settings.heading.label",
          "info": "t:sections.collapsible_content.blocks.collapsible_row.settings.heading.info"
        },
         {
      "type": "textarea",
      "id": "solutionans",
      "label": "Text",
      "default": "At [Your Company Name], we are dedicated to enhancing patient care and clinical efficiency through state-of-the-art medical products. Our commitment to innovation and quality ensures that healthcare providers have the tools they need to deliver the best possible outcomes for their patients."
    },
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.collapsible_content.presets.name",
      "blocks": [
        {
          "type": "collapsible_row"
        },
        {
          "type": "collapsible_row"
        },
        {
          "type": "collapsible_row"
        },
        {
          "type": "collapsible_row"
        },
        {
          "type": "collapsible_row"
        }
      ]
    }
  ]
}
{% endschema %}