
<style>
        :root {
            --primary-card-top-padding: 40px;
        }

        .primary-card-container {
            min-height: calc(332px - var(--primary-card-top-padding));
            width: 264px;
            background: #d1d1d1;
            border-radius: 8px;
            display: flex;
            flex-direction: column;
            gap: 30px;
            align-items: center;
            padding-top: var(--primary-card-top-padding);
            scroll-snap-align: start; /* Align each card to the start of the container */
            position: relative;
            flex-shrink: 0;
        }

        .card-feature-image {
            height: 104px;
            width: 104px;
            background: #c1c1c1;
        }

        .card-main-heading {
            font-family: 'Open Sans';
            font-weight: 600;
            font-size: 24px;
            line-height: 32.68px;
            text-align: center;
        }

        .card-action-button {
            position: absolute;
            background: #fff;
            bottom: 12px;
            right: 12px;
            width: 48px;
            height: 48px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: xx-large;
        }

        .scroll-container {
            position: relative;
            width: 100%;
            display: flex;
            align-items: center;
            overflow-x: hidden;
            scrollbar-width: none;
        }

        .card-container {
            display: flex;
            align-items: center;
            gap: 20px;
            overflow-x: auto;
            scroll-behavior: smooth;
            scroll-snap-type: x mandatory; /* Enable horizontal snap scrolling */
            scrollbar-width: none;
            width: calc(100% - 106px);
            margin: 0 53px;
        }

        .side-decoration {
            width: 33px;
            height: 40px;
            background: #fff;
            position: absolute;
            top: 125px;
            display: block !important;
        }

        .side-decoration-left {
            left: -17px;
        }

        .side-decoration-right {
            right: -17px;
        }

        .scroll-button {
            background: none;
            border: 1px solid #000;
            border-radius: 50%;
            height: 40px;
            width: 40px;
            font-size: larger;
            cursor: pointer;
            position: absolute;
            z-index: 1;
        }

        .scroll-button.next {
            right: 10px;
        }

        .card-description-text {
            /* transform: translateY(100%); */
        }
    </style>

<div class="scroll-container" id="section-{{ section.id }}">
<div class="card-container" id="cardContainer">
    {% for item in section.blocks %}
      <div class="primary-card-container">
        <div class="card-feature-image">
          {% if item.settings.icon-with-text-icon %}
            <img src="{{ item.settings.icon-with-text-icon |  image_url  }}" width="100" height="100" alt="icon">
            {% else %}
            <div style="width: 100%; height: 100%;">{{ 'image' | placeholder_svg_tag: 'placeholder-svg' | replace: 'svg', 'svg style="width: 100%; height: 100%; scale: 2"' }}</div>
          {% endif %}
        </div>
        <div class="card-main-heading">{{ item.settings.icon-with-text-title }}</div>
        <div class="card-description-text">{{ item.settings.description }}</div>
        <div class="card-action-button " ><span style="width: 24px; height: 24px;" class="svg-wrapper"> {{- 'icon-plus.svg' | inline_asset_content -}} </span></div>
        <div class="side-decoration side-decoration-left"></div>
        <div class="side-decoration side-decoration-right"></div>
    </div>
    {% endfor %}
    <button onclick="scrollCards()" class="scroll-button next">&gt;</button>
</div>
</div>

{% javascript %}
   let currentCard = 0;
        const container = document.getElementById('cardContainer');
        const cardWidth = 284; // 264px card width + 20px gap
        const cards = container.children.length;

        // Function to scroll cards via button
        function scrollCards() {
            currentCard = (currentCard + 1) % cards;
            container.scrollTo({
                left: currentCard * cardWidth,
                behavior: 'smooth',
            });
        }

        // Adjust currentCard on scroll
        container.addEventListener('scroll', () => {
            const scrollLeft = container.scrollLeft;
            currentCard = Math.round(scrollLeft / cardWidth);
        });
{% endjavascript %}

{% schema %}
{
  "name": "Icon With Text 2",
  "tag": "section",
  "disabled_on": {
    "groups": ["aside", "footer", "header"]
  },
  "settings": [
    {
      "type": "color_scheme",
      "label": "Section Color",
      "id": "sectionColor",
      "default": "scheme_1"
    }
  ],
  "blocks": [
    {
      "type": "card",
      "name": "card",
      "settings": [
        {
          "type": "image_picker",
          "id": "icon-with-text-icon",
          "label": "Select Icon"
        },
        {
          "type": "text",
          "id": "icon-with-text-title",
          "label": "Enter Title",
          "default": "Heading"
        },
        {
          "type": "text",
          "id": "icon-with-text-description",
          "label": "Enter Description"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Icon With Text 2",
      "blocks": [
        {
          "type": "card"
        },
        {
          "type": "card"
        },
        {
          "type": "card"
        },
        {
          "type": "card"
        }
      ]
    }
  ]
}
{% endschema %}
