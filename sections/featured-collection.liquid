{{ 'component-card.css' | asset_url | stylesheet_tag }}

<!-- Add this line to include the fonts -->
<link href="https://fonts.googleapis.com/css2?family=Fira+Sans:wght@400;700&family=Inter:wght@400;700&display=swap" rel="stylesheet">

  <h1 style="font-size: {{ section.settings.title_font_size }}px;">
    {{ section.settings.title }}
  </h1>

  {% if section.settings.show_subheading %}
    <h2 style="font-size: {{ section.settings.subheading_font_size }}px;">
      {{ collections[section.settings.collection].title }}
    </h2>
  {% endif %}

  {% if section.settings.show_description %}
    <p class="{{ section.settings.description_style }}">{{ section.settings.description }}</p>
  {% endif %}

  <button class="slider-arrow left" onclick="scrollCards(-1)">‚Üê</button>
  <button class="slider-arrow right" onclick="scrollCards(1)">‚Üí</button>

  <div class="product-container">
    {% for product in collections[section.settings.collection].products limit: section.settings.products_to_show %}
      <div class="product-card" style="background-color: {{ section.settings.product_card_background_color }};">
        <!-- Product Image -->
        <div class="product-image">
          <a href="{{ product.url }}">
            <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}" loading="lazy">
          </a>
        </div>

        <!-- Product Info -->
        <div class="product-info">
          <h3 style="color: {{ section.settings.text_color }};">{{ product.title }}</h3>
          <p class="model-number" style="color: {{ section.settings.text_color }};">Model no. #{{ product.sku }}</p>
        </div>

         <!-- Price, Reviews, and Icons (Separated) -->
    <div class="price-reviews-icons">
        <p class="price-tag" 
           style="
              background-color: {{ section.settings.price_background_color }};
              --pseudo-bg-color: {{ section.settings.product_card_background_color }};
              color: {{ section.settings.price_text_color }};">
            {% if product.compare_at_price > product.price %}
            <span class="original-price" style="color: {{ section.settings.price_text_color }};">‚Çπ{{ product.compare_at_price | money_without_currency }}</span>
            {% endif %}
            ‚Çπ{{ product.price | money_without_currency }}
        </p>
      
          <div class="dotted-line-wrapper" style="border-top-color: {{ section.settings.dotted_line_color }};">
         <div class="dotted-line"></div>
       </div>

          <!-- Icons -->
          <div class="icons">
            <div class="icon-wrapper">
              {% if section.settings.icon_1_image %}
                <img src="{{ section.settings.icon_1_image | img_url: '50x' }}" alt="{{ section.settings.icon_1_name }}">
              {% else %}
                <span class="icon-placeholder">üöö</span>
              {% endif %}
              <span class="icon-name">{{ section.settings.icon_1_name }}</span>
            </div>
            <div class="icon-wrapper">
              {% if section.settings.icon_2_image %}
                <img src="{{ section.settings.icon_2_image | img_url: '50x' }}" alt="{{ section.settings.icon_2_name }}">
              {% else %}
                <span class="icon-placeholder">üöõ</span>
              {% endif %}
              <span class="icon-name">{{ section.settings.icon_2_name }}</span>
            </div>
            <div class="icon-wrapper">
              {% if section.settings.icon_3_image %}
                <img src="{{ section.settings.icon_3_image | img_url: '50x' }}" alt="{{ section.settings.icon_3_name }}">
              {% else %}
                <span class="icon-placeholder">üöú</span>
              {% endif %}
              <span class="icon-name">{{ section.settings.icon_3_name }}</span>
            </div>
          </div>
        </div>
      </div>
    {% endfor %}
  </div>
</div>

<script>
function scrollCards(direction) {
  const container = document.querySelector('.product-container');
  const cards = container.querySelectorAll('.product-card');
  if (!cards.length) return;
  
  // Calculate the full width of one card including margin and gap
  const cardStyle = window.getComputedStyle(cards[0]);
  const cardWidth = cards[0].offsetWidth + 
                   parseInt(cardStyle.marginLeft) + 
                   parseInt(cardStyle.marginRight) + 
                   20; // 20px is the gap between cards
  
  // Get the current scroll position
  const currentScroll = container.scrollLeft;
  
  // Calculate the new scroll position (scroll one card at a time)
  const newScroll = currentScroll + (direction * cardWidth);
  
  // Ensure smooth scrolling with proper card alignment
  container.scrollTo({
    left: newScroll,
    behavior: 'smooth'
  });
}

// Initialize the carousel functionality
document.addEventListener('DOMContentLoaded', function() {
  const container = document.querySelector('.product-container');
  
  // Update arrow visibility
  function updateArrowVisibility() {
    const leftArrow = document.querySelector('.slider-arrow.left');
    const rightArrow = document.querySelector('.slider-arrow.right');
    
    // Show/hide left arrow based on scroll position
    leftArrow.style.opacity = container.scrollLeft <= 0 ? '0.5' : '1';
    leftArrow.disabled = container.scrollLeft <= 0;
    
    // Show/hide right arrow based on whether we can scroll further right
    const canScrollRight = container.scrollWidth > (container.scrollLeft + container.clientWidth + 1);
    rightArrow.style.opacity = canScrollRight ? '1' : '0.5';
    rightArrow.disabled = !canScrollRight;
  }
  
  // Add scroll event listener to update arrow visibility
  container.addEventListener('scroll', updateArrowVisibility);
  
  // Initial arrow visibility check
  updateArrowVisibility();
  
  // Optional: Add touch swipe functionality
  let touchStartX = 0;
  let touchEndX = 0;
  
  container.addEventListener('touchstart', e => {
    touchStartX = e.changedTouches[0].screenX;
  }, false);
  
  container.addEventListener('touchend', e => {
    touchEndX = e.changedTouches[0].screenX;
    if (touchStartX - touchEndX > 50) {
      scrollCards(1);
    } else if (touchEndX - touchStartX > 50) {
      scrollCards(-1);
    }
  }, false);
});
</script>


{% schema %}
{
  "name": "Featured Collection",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Featured Collection"
    },
    {
      "type": "range",
      "id": "title_font_size",
      "label": "Title Font Size",
      "min": 20,
      "max": 80,
      "step": 1,
      "default": 36
    },
    {
      "type": "checkbox",
      "id": "show_subheading",
      "label": "Show collection title as subheading",
      "default": true
    },
    {
      "type": "range",
      "id": "subheading_font_size",
      "label": "Subheading Font Size",
      "min": 14,
      "max": 40,
      "step": 1,
      "default": 20
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description"
    },
    {
      "type": "checkbox",
      "id": "show_description",
      "label": "Show description",
      "default": true
    },
    {
      "type": "select",
      "id": "description_style",
      "label": "Description style",
      "options": [
        { "value": "body", "label": "Body" },
        { "value": "subtitle", "label": "Subtitle" },
        { "value": "uppercase", "label": "Uppercase" }
      ],
      "default": "body"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Select collection"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 25,
      "step": 1,
      "default": 4,
      "label": "Number of products to show"
    },
    {
      "type": "header",
      "content": "Color Settings"
    },
    {
      "type": "color",
      "id": "product_card_background_color",
      "label": "Product Card Background Color",
      "default": "#F7F7F7"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "price_background_color",
      "label": "Price Tag Background Color",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "price_text_color",
      "label": "Price Tag Text Color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "dotted_line_color",
      "label": "Dotted Line Color",
      "default": "#FFFFFF"
    },
    {
      "type": "header",
      "content": "Icon Settings"
    },
    {
      "type": "image_picker",
      "id": "icon_1_image",
      "label": "Icon 1 Image"
    },
    {
      "type": "image_picker",
      "id": "icon_2_image",
      "label": "Icon 2 Image"
    },
    {
      "type": "image_picker",
      "id": "icon_3_image",
      "label": "Icon 3 Image"
    }
  ]
}
{% endschema %}
