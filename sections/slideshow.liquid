{{ 'component-slideshow.css' | asset_url | stylesheet_tag }}
<style>

  .slide-text{
      background-color: var(--background_product_card);
      color:var(--color_text);
  }
  .slideshow_btn{
    background-color:rgb(var(--color-button-text));
    color:rgb(var(--color-secondary-button-text));
  }
</style>
<div class="slideshow-section color-{{ section.settings.color_scheme }} gradient section-{{ section.id }}-padding">
  <div class="interactive-slideshow">
    {% for block in section.blocks %}
      <div class="slide {% if forloop.first %}active{% endif %}" data-index="{{ forloop.index0 }}">
       
          <div class="backfold">
             {% if block.settings.image != blank %}
                   <img src="{{ block.settings.image | img_url: 'master' }}" alt="{{ block.settings.title }}">
                {% else %}
                   {{ 'collection-1' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
              {% endif %}
          </div>
     
        <div class="headarrow">
        <h3 class="headingtext"  >{{ block.settings.feature }}</h3>
           <span id="info__banner__expand__button" class="headarrow_svg-wrapper">
            {{- 'icon-arrow.svg' | inline_asset_content -}}
          </span>
        </div>
        <div class="slide-text" >
            <div class="description">
              <p class="feature"  >{{ block.settings.feature }}</p>
              <h2>{{ block.settings.title }}</h2>
              <p class="feature1" >{{ block.settings.content }}</p>
            </div>
            <div class="des-button">
               {% if block.settings.show_button %}
              <a href="{{ block.settings.button_link }}" class="slideshow_btn">{{ block.settings.button_text }}</a>
              {% endif %}
                 </div>
        </div>
      </div>
    {% endfor %}
  </div>
</div>
<script>
 document.addEventListener('DOMContentLoaded', function() {
  const slides = document.querySelectorAll('.slide');
  const slideshow = document.querySelector('.interactive-slideshow');
  let activeSlide = null;
  let isMobile = window.innerWidth <= 900;
  let startX;
  let scrollLeft;
  let isDown = false;
   function adjustJustifyContent() {
   
    if (!isMobile) {
      if (slideshow.scrollWidth <= slideshow.clientWidth) {
        slideshow.style.justifyContent = 'center';
      } else {
        slideshow.style.justifyContent = 'flex-start';
      }
    } else {

      slideshow.style.justifyContent = '';
    }
  }
  adjustJustifyContent();
 
  const setActiveSlide = (slide) => {
    if (!isMobile) {
      if (activeSlide !== slide) {
        slides.forEach(s => s.classList.remove('active'));
        slide.classList.add('active');
        activeSlide = slide;
      }
    }
  };
  const toggleSlideText = (slideText, arrow) => {
    if (slideText.classList.contains('expanded')) {
      slideText.classList.remove('expanded');
      arrow.classList.remove('expanded');
    } else {
      document.querySelectorAll('.slide-text').forEach(text => text.classList.remove('expanded'));
      slideText.classList.add('expanded');
      arrow.classList.add('expanded');
    }
  };
  const addMobileScrollListeners = () => {
    slideshow.addEventListener('mousedown', (e) => {
      isDown = true;
      slideshow.style.cursor = 'grabbing';
      startX = e.pageX - slideshow.offsetLeft;
      scrollLeft = slideshow.scrollLeft;
    });
    slideshow.addEventListener('mouseleave', () => {
      isDown = false;
      slideshow.style.cursor = 'grab';
    });
    slideshow.addEventListener('mouseup', () => {
      isDown = false;
      slideshow.style.cursor = 'grab';
    });
    slideshow.addEventListener('mousemove', (e) => {
      if (!isDown) return;
      e.preventDefault();
      const x = e.pageX - slideshow.offsetLeft;
      const walk = (x - startX) * 2;
      slideshow.scrollLeft = scrollLeft - walk;
    });
  };
  const addMobileListeners = () => {
    slides.forEach(slide => {
      const arrow = slide.querySelector('.headarrow_svg-wrapper');
      const slideText = slide.querySelector('.slide-text');
      
      arrow.addEventListener('click', () => toggleSlideText(slideText, arrow));
    });
    addMobileScrollListeners();
  };
  const removeMobileListeners = () => {
    slides.forEach(slide => {
      const heading = slide.querySelector('.headarrow_svg-wrapper');
      const clone = heading.cloneNode(true);
      heading.parentNode.replaceChild(clone, heading);
    });
    slideshow.removeEventListener('mousedown', () => {});
    slideshow.removeEventListener('mouseleave', () => {});
    slideshow.removeEventListener('mouseup', () => {});
    slideshow.removeEventListener('mousemove', () => {});
  };
  const addDesktopListeners = () => {
    slides.forEach(slide => {
      slide.addEventListener('mouseenter', () => setActiveSlide(slide));
    });
  };
  const removeDesktopListeners = () => {
    slides.forEach(slide => {
      const clone = slide.cloneNode(true);
      slide.parentNode.replaceChild(clone, slide);
    });
  };
  const handleResize = () => {
    const newIsMobile = window.innerWidth <= 1100;
    if (newIsMobile !== isMobile) {
      isMobile = newIsMobile;
      removeActiveState();
      if (isMobile) {
        removeMobileListeners();
        addMobileListeners();
      } else {
        removeMobileListeners();
        addDesktopListeners();
        setActiveSlide(slides[0]);
      }
    }
  };
  const removeActiveState = () => {
    slides.forEach(slide => slide.classList.remove('active'));
    activeSlide = null;
  };
  if (isMobile) {
    addMobileListeners();
  } else {
    addDesktopListeners();
    setActiveSlide(slides[0]);
  }
  let resizeTimer;
  window.addEventListener('resize', () => {
      isMobile = window.innerWidth <= 900;
    adjustJustifyContent();
    clearTimeout(resizeTimer);
    resizeTimer = setTimeout(handleResize, 250);
  });
});
</script> 




{% schema %}
{
"name": "Interactive Slideshow",
"settings": [
  {
    "type": "color_scheme",
    "id": "color_scheme",
    "label": "t:sections.all.colors.label",
    "default": "scheme-1"
  },
],
"blocks": [
  {
    "type": "slide",
    "name": "Slide",
    "settings": [
      {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      },
       {
        "type": "text",
        "id": "feature",
        "label": "Feature",
        "default": "NEW ARRIVAL"
      },
      {
        "type": "text",
        "id": "title",
        "label": "Title",
        "default": "Thanksgiving Big Billion Sale!"
      },
        {
        "type": "richtext",
        "id": "content",
        "label": "Content",
        "default": "<p>Enhance patient care with our premium medical product,featuring advanced technology for precision and reliability. Ideal for seamless integration into any practical</p>"
      },
       {
        "type": "checkbox",
        "id": "show_button",
        "label": "Show Button",
        "default": true
      },
      
      {
        "type": "text",
        "id": "button_text",
        "label": "Button Text",
        "default": "Shop Now"
      },
      {
        "type": "url",
        "id": "button_link",
        "label": "Button Link"
      },
    ]
  }
],
"presets": [
  {
    "name": "Interactive Slideshow",
    "blocks": [
      {
        "type": "slide"
      },
      {
        "type": "slide"
      },
      {
        "type": "slide"
      },
        {
        "type": "slide"
      },
        {
        "type": "slide"
      },
        {
        "type": "slide"
      },
    ]
  }
]
}
{% endschema %}
